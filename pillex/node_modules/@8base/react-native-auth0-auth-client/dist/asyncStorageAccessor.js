"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.purgeAuthState = exports.setAuthState = exports.getAuthState = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _reactNative = require("react-native");

var AUTH_ASYNCSTORAGE_KEY = 'auth';

var getAuthState =
/*#__PURE__*/
function () {
  var _ref = (0, _asyncToGenerator2.default)(
  /*#__PURE__*/
  _regenerator.default.mark(function _callee() {
    var auth;
    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.t0 = JSON;
            _context.next = 3;
            return _reactNative.AsyncStorage.getItem(AUTH_ASYNCSTORAGE_KEY);

          case 3:
            _context.t1 = _context.sent;
            auth = _context.t0.parse.call(_context.t0, _context.t1);
            return _context.abrupt("return", auth || {});

          case 6:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  return function getAuthState() {
    return _ref.apply(this, arguments);
  };
}();

exports.getAuthState = getAuthState;

var setAuthState =
/*#__PURE__*/
function () {
  var _ref2 = (0, _asyncToGenerator2.default)(
  /*#__PURE__*/
  _regenerator.default.mark(function _callee2(newState) {
    var currentState, mergedState;
    return _regenerator.default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.next = 2;
            return getAuthState();

          case 2:
            currentState = _context2.sent;
            mergedState = (0, _objectSpread2.default)({}, currentState, newState);
            _context2.next = 6;
            return _reactNative.AsyncStorage.setItem(AUTH_ASYNCSTORAGE_KEY, JSON.stringify(mergedState));

          case 6:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2, this);
  }));

  return function setAuthState(_x) {
    return _ref2.apply(this, arguments);
  };
}();

exports.setAuthState = setAuthState;

var purgeAuthState =
/*#__PURE__*/
function () {
  var _ref3 = (0, _asyncToGenerator2.default)(
  /*#__PURE__*/
  _regenerator.default.mark(function _callee3() {
    return _regenerator.default.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            _context3.next = 2;
            return _reactNative.AsyncStorage.removeItem(AUTH_ASYNCSTORAGE_KEY);

          case 2:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3, this);
  }));

  return function purgeAuthState() {
    return _ref3.apply(this, arguments);
  };
}();

exports.purgeAuthState = purgeAuthState;