import { ApolloLink, Observable, Operation, NextLink, FetchResult } from 'apollo-link';
export declare type Auth = {
    refreshToken: string;
    idToken: string;
};
export declare type RefreshTokenInput = {
    refreshToken: string;
    email: string;
};
export declare class RefreshTokenInvalidError extends Error {
    __proto__: Error;
    constructor(message?: string);
}
export default class TokenRefreshLink extends ApolloLink {
    private setRefreshTokenInput;
    private authReceived;
    private authFailed?;
    constructor(params: {
        setRefreshTokenInput: () => RefreshTokenInput;
        authReceived: (auth: Auth) => void;
        authFailed?: (error?: Object) => void;
    });
    request(operation: Operation, forward: NextLink): Observable<FetchResult>;
    private passAuthFailed;
    private refreshToken;
}
