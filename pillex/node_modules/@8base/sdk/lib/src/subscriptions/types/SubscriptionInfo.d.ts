import { DocumentNode } from "graphql";
import { ISubscriptionInfo } from "../interfaces";
export declare abstract class SubscriptionInfo implements ISubscriptionInfo {
    constructor(workspaceId: string, user: string);
    private _workspaceId;
    private _user;
    private _userhash;
    private setUser;
    readonly user: string;
    readonly userHash: string;
    private setWorkspaceId;
    readonly workspaceId: string;
    private _filter;
    setFilter(filter: any): ISubscriptionInfo;
    readonly filter: any;
    private _query;
    private _queryString;
    private _queryHash;
    private transformQuery;
    private getQueryHash;
    setQueryString(query: string): ISubscriptionInfo;
    readonly query: DocumentNode;
    readonly path: string;
    readonly header: string;
    serialize(): string;
    deserialize(raw: string): ISubscriptionInfo;
    abstract readonly action: string;
}
export declare class EntitySubscriptionInfo extends SubscriptionInfo {
    _entity: string;
    constructor(entity: string, workspaceId: string, user: string);
    readonly action: string;
}
