"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TableSchemaProvider = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireDefault(require("react"));

var R = _interopRequireWildcard(require("ramda"));

var _graphqlTag = _interopRequireDefault(require("graphql-tag"));

var _reactApollo = require("react-apollo");

var _auth = require("@8base/auth");

var _TableSchemaContext = require("./TableSchemaContext");

function _templateObject() {
  var data = (0, _taggedTemplateLiteral2.default)(["\n  query TablesSchema {\n    tablesList {\n      items {\n        ...TableFragment\n      }\n      count\n    }\n  }\n\n  fragment TableFragment on Table {\n    id\n    name\n    displayName\n    isSystem\n    fields {\n      ...TableFieldFragment\n    }\n  }\n\n  fragment TableFieldFragment on TableField {\n    ...CommonTableFieldFragment\n    fieldTypeAttributes {\n      ...TextFieldTypeAttributes\n      ...NumberFieldTypeAttributes\n      ...FileFieldTypeAttributes\n      ...DateFieldTypeAttributes\n      ...SwitchFieldTypeAttributes\n      ...SmartFieldTypesAttributes\n    }\n  }\n\n  fragment CommonTableFieldFragment on TableField {\n    id\n    name\n    displayName\n    description\n    fieldType\n    fieldTypeAttributes {\n      ...TextFieldTypeAttributes\n      ...NumberFieldTypeAttributes\n      ...FileFieldTypeAttributes\n      ...DateFieldTypeAttributes\n      ...SwitchFieldTypeAttributes\n    }\n    isList\n    isRequired\n    isUnique\n    defaultValue\n    isSystem\n    isMeta\n    relation {\n      refFieldName\n      refFieldDisplayName\n      relationTableName\n      relationFieldName\n      refTable {\n        id\n        name\n      }\n      refFieldIsList\n      refFieldIsRequired\n    }\n  }\n\n  fragment DateFieldTypeAttributes on DateFieldTypeAttributes {\n    format\n  }\n\n  fragment TextFieldTypeAttributes on TextFieldTypeAttributes {\n    format\n    fieldSize\n  }\n\n  fragment NumberFieldTypeAttributes on NumberFieldTypeAttributes {\n    format\n    precision\n    currency\n    minValue\n    maxValue\n  }\n\n  fragment FileFieldTypeAttributes on FileFieldTypeAttributes {\n    format\n    maxSize\n    typeRestrictions\n  }\n\n  fragment SmartFieldTypesAttributes on SmartFieldTypeAttributes {\n    format\n    innerFields {\n      name\n      displayName\n      description\n      fieldType\n      isList\n      isRequired\n      isUnique\n      fieldTypeAttributes {\n        ...TextFieldTypeAttributes\n        ...NumberFieldTypeAttributes\n        ...FileFieldTypeAttributes\n        ...DateFieldTypeAttributes\n        ...SwitchFieldTypeAttributes\n      }\n    }\n  }\n\n  fragment SwitchFieldTypeAttributes on SwitchFieldTypeAttributes {\n    format\n    listOptions\n  }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

var TABLES_SCHEMA_QUERY = (0, _graphqlTag.default)(_templateObject());

/**
 * Provider for 8base table schemas
 * @property {Function} children Children of the provider. Could be either react node or function with loading state.
 */
var TableSchemaProvider =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2.default)(TableSchemaProvider, _React$Component);

  function TableSchemaProvider() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, TableSchemaProvider);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(TableSchemaProvider)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "renderContent", function (_ref) {
      var data = _ref.data,
          loading = _ref.loading;
      var children = _this.props.children;
      if (loading) return children({
        loading: loading
      });
      return _react.default.createElement(_TableSchemaContext.TableSchemaContext.Provider, {
        value: R.pathOr([], ['tablesList', 'items'], data)
      }, children({
        loading: loading
      }));
    });
    return _this;
  }

  (0, _createClass2.default)(TableSchemaProvider, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          isAuthorized = _this$props.auth.isAuthorized,
          notifyOnNetworkStatusChange = _this$props.notifyOnNetworkStatusChange,
          children = _this$props.children;
      var rendered = null;

      if (isAuthorized) {
        rendered = _react.default.createElement(_reactApollo.Query, {
          query: TABLES_SCHEMA_QUERY,
          notifyOnNetworkStatusChange: notifyOnNetworkStatusChange
        }, this.renderContent);
      } else {
        rendered = children({});
      }

      return rendered;
    }
  }]);
  return TableSchemaProvider;
}(_react.default.Component);

exports.TableSchemaProvider = TableSchemaProvider;
exports.TableSchemaProvider = TableSchemaProvider = (0, _auth.withAuth)(TableSchemaProvider);