"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AuthProvider = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _AuthContext = require("./AuthContext");

/**
 * Provides access to the authentication state.
 * @property {React$Node} children Children of the provider.
 * @property {AuthClient} authClient Instance of the auth client.
 */
var AuthProvider =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2.default)(AuthProvider, _React$Component);

  function AuthProvider(props) {
    var _this;

    (0, _classCallCheck2.default)(this, AuthProvider);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(AuthProvider).call(this, props));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "updateState",
    /*#__PURE__*/
    (0, _asyncToGenerator2.default)(
    /*#__PURE__*/
    _regenerator.default.mark(function _callee() {
      var authClient, isAuthorized, authState;
      return _regenerator.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              authClient = _this.props.authClient;
              _context.next = 3;
              return authClient.checkIsAuthorized();

            case 3:
              isAuthorized = _context.sent;
              _context.next = 6;
              return authClient.getAuthState();

            case 6:
              authState = _context.sent;

              _this.setState({
                isAuthorized: isAuthorized,
                authState: authState
              });

            case 8:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, this);
    })));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "setAuthState",
    /*#__PURE__*/
    function () {
      var _ref2 = (0, _asyncToGenerator2.default)(
      /*#__PURE__*/
      _regenerator.default.mark(function _callee2(state) {
        var authClient;
        return _regenerator.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                authClient = _this.props.authClient;
                _context2.next = 3;
                return authClient.setAuthState(state);

              case 3:
                _context2.next = 5;
                return _this.updateState();

              case 5:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      return function (_x) {
        return _ref2.apply(this, arguments);
      };
    }());
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "purgeAuthState",
    /*#__PURE__*/
    (0, _asyncToGenerator2.default)(
    /*#__PURE__*/
    _regenerator.default.mark(function _callee3() {
      var authClient;
      return _regenerator.default.wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              authClient = _this.props.authClient;
              _context3.next = 3;
              return authClient.purgeAuthState();

            case 3:
              _context3.next = 5;
              return _this.updateState();

            case 5:
            case "end":
              return _context3.stop();
          }
        }
      }, _callee3, this);
    })));

    if (props.authClient === undefined || props.authClient === null) {
      throw new Error('Property authClient in the AuthProvider should be specified');
    }

    _this.state = {
      isAuthorized: false,
      authState: {}
    };
    return _this;
  }

  (0, _createClass2.default)(AuthProvider, [{
    key: "componentDidMount",
    value: function () {
      var _componentDidMount = (0, _asyncToGenerator2.default)(
      /*#__PURE__*/
      _regenerator.default.mark(function _callee4() {
        return _regenerator.default.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return this.updateState();

              case 2:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function componentDidMount() {
        return _componentDidMount.apply(this, arguments);
      }

      return componentDidMount;
    }()
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          children = _this$props.children,
          authClient = _this$props.authClient;
      var _this$state = this.state,
          isAuthorized = _this$state.isAuthorized,
          authState = _this$state.authState;
      return _react.default.createElement(_AuthContext.AuthContext.Provider, {
        value: (0, _objectSpread2.default)({}, authClient, {
          setAuthState: this.setAuthState,
          purgeAuthState: this.purgeAuthState,
          isAuthorized: isAuthorized,
          authState: authState
        })
      }, children);
    }
  }]);
  return AuthProvider;
}(_react.default.Component);

exports.AuthProvider = AuthProvider;