{"code":"import * as tslib_1 from \"tslib\";\r\nimport { Observable } from 'apollo-link';\r\nvar OperationBatcher = (function () {\r\n    function OperationBatcher(_a) {\r\n        var batchInterval = _a.batchInterval, _b = _a.batchMax, batchMax = _b === void 0 ? 0 : _b, batchHandler = _a.batchHandler, _c = _a.batchKey, batchKey = _c === void 0 ? function () { return ''; } : _c;\r\n        this.queuedRequests = new Map();\r\n        this.batchInterval = batchInterval;\r\n        this.batchMax = batchMax;\r\n        this.batchHandler = batchHandler;\r\n        this.batchKey = batchKey;\r\n    }\r\n    OperationBatcher.prototype.enqueueRequest = function (request) {\r\n        var _this = this;\r\n        var requestCopy = tslib_1.__assign({}, request);\r\n        var queued = false;\r\n        var key = this.batchKey(request.operation);\r\n        if (!requestCopy.observable) {\r\n            requestCopy.observable = new Observable(function (observer) {\r\n                if (!_this.queuedRequests.has(key)) {\r\n                    _this.queuedRequests.set(key, []);\r\n                }\r\n                if (!queued) {\r\n                    _this.queuedRequests.get(key).push(requestCopy);\r\n                    queued = true;\r\n                }\r\n                requestCopy.next = requestCopy.next || [];\r\n                if (observer.next)\r\n                    requestCopy.next.push(observer.next.bind(observer));\r\n                requestCopy.error = requestCopy.error || [];\r\n                if (observer.error)\r\n                    requestCopy.error.push(observer.error.bind(observer));\r\n                requestCopy.complete = requestCopy.complete || [];\r\n                if (observer.complete)\r\n                    requestCopy.complete.push(observer.complete.bind(observer));\r\n                if (_this.queuedRequests.get(key).length === 1) {\r\n                    _this.scheduleQueueConsumption(key);\r\n                }\r\n                if (_this.queuedRequests.get(key).length === _this.batchMax) {\r\n                    _this.consumeQueue(key);\r\n                }\r\n            });\r\n        }\r\n        return requestCopy.observable;\r\n    };\r\n    OperationBatcher.prototype.consumeQueue = function (key) {\r\n        if (key === void 0) { key = ''; }\r\n        var queuedRequests = this.queuedRequests.get(key);\r\n        if (!queuedRequests) {\r\n            return;\r\n        }\r\n        this.queuedRequests.delete(key);\r\n        var requests = queuedRequests.map(function (queuedRequest) { return queuedRequest.operation; });\r\n        var forwards = queuedRequests.map(function (queuedRequest) { return queuedRequest.forward; });\r\n        var observables = [];\r\n        var nexts = [];\r\n        var errors = [];\r\n        var completes = [];\r\n        queuedRequests.forEach(function (batchableRequest, index) {\r\n            observables.push(batchableRequest.observable);\r\n            nexts.push(batchableRequest.next);\r\n            errors.push(batchableRequest.error);\r\n            completes.push(batchableRequest.complete);\r\n        });\r\n        var batchedObservable = this.batchHandler(requests, forwards) || Observable.of();\r\n        var onError = function (error) {\r\n            errors.forEach(function (rejecters) {\r\n                if (rejecters) {\r\n                    rejecters.forEach(function (e) { return e(error); });\r\n                }\r\n            });\r\n        };\r\n        batchedObservable.subscribe({\r\n            next: function (results) {\r\n                if (!Array.isArray(results)) {\r\n                    results = [results];\r\n                }\r\n                if (nexts.length !== results.length) {\r\n                    var error = new Error(\"server returned results with length \" + results.length + \", expected length of \" + nexts.length);\r\n                    error.result = results;\r\n                    return onError(error);\r\n                }\r\n                results.forEach(function (result, index) {\r\n                    if (nexts[index]) {\r\n                        nexts[index].forEach(function (next) { return next(result); });\r\n                    }\r\n                });\r\n            },\r\n            error: onError,\r\n            complete: function () {\r\n                completes.forEach(function (complete) {\r\n                    if (complete) {\r\n                        complete.forEach(function (c) { return c(); });\r\n                    }\r\n                });\r\n            },\r\n        });\r\n        return observables;\r\n    };\r\n    OperationBatcher.prototype.scheduleQueueConsumption = function (key) {\r\n        var _this = this;\r\n        if (key === void 0) { key = ''; }\r\n        setTimeout(function () {\r\n            if (_this.queuedRequests.get(key) && _this.queuedRequests.get(key).length) {\r\n                _this.consumeQueue(key);\r\n            }\r\n        }, this.batchInterval);\r\n    };\r\n    return OperationBatcher;\r\n}());\r\nexport { OperationBatcher };\r\n//# sourceMappingURL=batching.js.map","map":"{\"version\":3,\"file\":\"batching.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/batching.ts\"],\"names\":[],\"mappings\":\"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\"}","dtsmap":{"name":"/Users/hwillson/Documents/git/apollo/apollo-link/packages/apollo-link-batch/batching.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"batching.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"src/batching.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,EAAE,MAAM,aAAa,CAAC;AAE3E,oBAAY,YAAY,GAAG,CACzB,UAAU,EAAE,SAAS,EAAE,EACvB,OAAO,CAAC,EAAE,CAAC,QAAQ,GAAG,SAAS,CAAC,EAAE,KAC/B,UAAU,CAAC,WAAW,EAAE,CAAC,GAAG,IAAI,CAAC;AAEtC,MAAM,WAAW,gBAAgB;IAC/B,SAAS,EAAE,SAAS,CAAC;IACrB,OAAO,CAAC,EAAE,QAAQ,CAAC;IAKnB,UAAU,CAAC,EAAE,UAAU,CAAC,WAAW,CAAC,CAAC;IACrC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC,MAAM,EAAE,WAAW,KAAK,IAAI,CAAC,CAAC;IAC5C,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,KAAK,EAAE,KAAK,KAAK,IAAI,CAAC,CAAC;IACtC,QAAQ,CAAC,EAAE,KAAK,CAAC,MAAM,IAAI,CAAC,CAAC;CAC9B;AAKD,qBAAa,gBAAgB;IAGpB,cAAc,EAAE,GAAG,CAAC,MAAM,EAAE,gBAAgB,EAAE,CAAC,CAAC;IAEvD,OAAO,CAAC,aAAa,CAAS;IAC9B,OAAO,CAAC,QAAQ,CAAS;IAGzB,OAAO,CAAC,YAAY,CAAe;IACnC,OAAO,CAAC,QAAQ,CAAmC;gBAEvC,EACV,aAAa,EACb,QAAY,EACZ,YAAY,EACZ,QAAmB,GACpB,EAAE;QACD,aAAa,EAAE,MAAM,CAAC;QACtB,QAAQ,CAAC,EAAE,MAAM,CAAC;QAClB,YAAY,EAAE,YAAY,CAAC;QAC3B,QAAQ,CAAC,EAAE,CAAC,SAAS,EAAE,SAAS,KAAK,MAAM,CAAC;KAC7C;IAQM,cAAc,CAAC,OAAO,EAAE,gBAAgB,GAAG,UAAU,CAAC,WAAW,CAAC;IAgDlE,YAAY,CACjB,GAAG,GAAE,MAAW,GACf,CAAC,UAAU,CAAC,WAAW,CAAC,GAAG,SAAS,CAAC,EAAE,GAAG,SAAS;IA8EtD,OAAO,CAAC,wBAAwB;CAOjC\"}"},"dts":{"name":"/Users/hwillson/Documents/git/apollo/apollo-link/packages/apollo-link-batch/batching.d.ts","writeByteOrderMark":false,"text":"import { Observable, Operation, NextLink, FetchResult } from 'apollo-link';\r\nexport declare type BatchHandler = (operations: Operation[], forward?: (NextLink | undefined)[]) => Observable<FetchResult[]> | null;\r\nexport interface BatchableRequest {\r\n    operation: Operation;\r\n    forward?: NextLink;\r\n    observable?: Observable<FetchResult>;\r\n    next?: Array<(result: FetchResult) => void>;\r\n    error?: Array<(error: Error) => void>;\r\n    complete?: Array<() => void>;\r\n}\r\nexport declare class OperationBatcher {\r\n    queuedRequests: Map<string, BatchableRequest[]>;\r\n    private batchInterval;\r\n    private batchMax;\r\n    private batchHandler;\r\n    private batchKey;\r\n    constructor({ batchInterval, batchMax, batchHandler, batchKey, }: {\r\n        batchInterval: number;\r\n        batchMax?: number;\r\n        batchHandler: BatchHandler;\r\n        batchKey?: (operation: Operation) => string;\r\n    });\r\n    enqueueRequest(request: BatchableRequest): Observable<FetchResult>;\r\n    consumeQueue(key?: string): (Observable<FetchResult> | undefined)[] | undefined;\r\n    private scheduleQueueConsumption;\r\n}\r\n//# sourceMappingURL=batching.d.ts.map"}}
