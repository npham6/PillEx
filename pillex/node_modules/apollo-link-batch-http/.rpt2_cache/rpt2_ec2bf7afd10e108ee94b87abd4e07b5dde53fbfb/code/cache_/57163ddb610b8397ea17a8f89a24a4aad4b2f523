{"code":"import * as tslib_1 from \"tslib\";\r\nimport { ApolloLink, Observable, fromError, } from 'apollo-link';\r\nimport { serializeFetchParameter, selectURI, parseAndCheckHttpResponse, checkFetcher, selectHttpOptionsAndBody, createSignalIfSupported, fallbackHttpConfig, } from 'apollo-link-http-common';\r\nimport { BatchLink } from 'apollo-link-batch';\r\nvar BatchHttpLink = (function (_super) {\r\n    tslib_1.__extends(BatchHttpLink, _super);\r\n    function BatchHttpLink(fetchParams) {\r\n        if (fetchParams === void 0) { fetchParams = {}; }\r\n        var _this = _super.call(this) || this;\r\n        var _a = fetchParams.uri, uri = _a === void 0 ? '/graphql' : _a, fetcher = fetchParams.fetch, includeExtensions = fetchParams.includeExtensions, batchInterval = fetchParams.batchInterval, batchMax = fetchParams.batchMax, batchKey = fetchParams.batchKey, requestOptions = tslib_1.__rest(fetchParams, [\"uri\", \"fetch\", \"includeExtensions\", \"batchInterval\", \"batchMax\", \"batchKey\"]);\r\n        checkFetcher(fetcher);\r\n        if (!fetcher) {\r\n            fetcher = fetch;\r\n        }\r\n        var linkConfig = {\r\n            http: { includeExtensions: includeExtensions },\r\n            options: requestOptions.fetchOptions,\r\n            credentials: requestOptions.credentials,\r\n            headers: requestOptions.headers,\r\n        };\r\n        _this.batchInterval = batchInterval || 10;\r\n        _this.batchMax = batchMax || 10;\r\n        var batchHandler = function (operations) {\r\n            var chosenURI = selectURI(operations[0], uri);\r\n            var context = operations[0].getContext();\r\n            var contextConfig = {\r\n                http: context.http,\r\n                options: context.fetchOptions,\r\n                credentials: context.credentials,\r\n                headers: context.headers,\r\n            };\r\n            var optsAndBody = operations.map(function (operation) {\r\n                return selectHttpOptionsAndBody(operation, fallbackHttpConfig, linkConfig, contextConfig);\r\n            });\r\n            var loadedBody = optsAndBody.map(function (_a) {\r\n                var body = _a.body;\r\n                return body;\r\n            });\r\n            var options = optsAndBody[0].options;\r\n            if (options.method === 'GET') {\r\n                return fromError(new Error('apollo-link-batch-http does not support GET requests'));\r\n            }\r\n            try {\r\n                options.body = serializeFetchParameter(loadedBody, 'Payload');\r\n            }\r\n            catch (parseError) {\r\n                return fromError(parseError);\r\n            }\r\n            var controller;\r\n            if (!options.signal) {\r\n                var _a = createSignalIfSupported(), _controller = _a.controller, signal = _a.signal;\r\n                controller = _controller;\r\n                if (controller)\r\n                    options.signal = signal;\r\n            }\r\n            return new Observable(function (observer) {\r\n                fetcher(chosenURI, options)\r\n                    .then(function (response) {\r\n                    operations.forEach(function (operation) { return operation.setContext({ response: response }); });\r\n                    return response;\r\n                })\r\n                    .then(parseAndCheckHttpResponse(operations))\r\n                    .then(function (result) {\r\n                    observer.next(result);\r\n                    observer.complete();\r\n                    return result;\r\n                })\r\n                    .catch(function (err) {\r\n                    if (err.name === 'AbortError')\r\n                        return;\r\n                    if (err.result && err.result.errors && err.result.data) {\r\n                        observer.next(err.result);\r\n                    }\r\n                    observer.error(err);\r\n                });\r\n                return function () {\r\n                    if (controller)\r\n                        controller.abort();\r\n                };\r\n            });\r\n        };\r\n        batchKey =\r\n            batchKey ||\r\n                (function (operation) {\r\n                    var context = operation.getContext();\r\n                    var contextConfig = {\r\n                        http: context.http,\r\n                        options: context.fetchOptions,\r\n                        credentials: context.credentials,\r\n                        headers: context.headers,\r\n                    };\r\n                    return selectURI(operation, uri) + JSON.stringify(contextConfig);\r\n                });\r\n        _this.batcher = new BatchLink({\r\n            batchInterval: _this.batchInterval,\r\n            batchMax: _this.batchMax,\r\n            batchKey: batchKey,\r\n            batchHandler: batchHandler,\r\n        });\r\n        return _this;\r\n    }\r\n    BatchHttpLink.prototype.request = function (operation) {\r\n        return this.batcher.request(operation);\r\n    };\r\n    return BatchHttpLink;\r\n}(ApolloLink));\r\nexport { BatchHttpLink };\r\n//# sourceMappingURL=batchHttpLink.js.map","map":"{\"version\":3,\"file\":\"batchHttpLink.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/batchHttpLink.ts\"],\"names\":[],\"mappings\":\";AAAA,OAAO,EACL,UAAU,EAGV,UAAU,EACV,SAAS,GACV,MAAM,aAAa,CAAC;AACrB,OAAO,EACL,uBAAuB,EACvB,SAAS,EACT,yBAAyB,EACzB,YAAY,EACZ,wBAAwB,EACxB,uBAAuB,EACvB,kBAAkB,GAEnB,MAAM,yBAAyB,CAAC;AACjC,OAAO,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAC;AA6B9C;IAAmC,yCAAU;IAK3C,uBAAY,WAAuC;QAAvC,4BAAA,EAAA,gBAAuC;QAAnD,YACE,iBAAO,SAoKR;QAjKG,IAAA,oBAAgB,EAAhB,qCAAgB,EAEhB,2BAAc,EACd,iDAAiB,EACjB,yCAAa,EACb,+BAAQ,EACR,+BAAQ,EACR,4HAAiB,CACH;QAGhB,YAAY,CAAC,OAAO,CAAC,CAAC;QAKtB,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,GAAG,KAAK,CAAC;SACjB;QAED,IAAM,UAAU,GAAG;YACjB,IAAI,EAAE,EAAE,iBAAiB,mBAAA,EAAE;YAC3B,OAAO,EAAE,cAAc,CAAC,YAAY;YACpC,WAAW,EAAE,cAAc,CAAC,WAAW;YACvC,OAAO,EAAE,cAAc,CAAC,OAAO;SAChC,CAAC;QAEF,KAAI,CAAC,aAAa,GAAG,aAAa,IAAI,EAAE,CAAC;QACzC,KAAI,CAAC,QAAQ,GAAG,QAAQ,IAAI,EAAE,CAAC;QAE/B,IAAM,YAAY,GAAG,UAAC,UAAuB;YAC3C,IAAM,SAAS,GAAG,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;YAEhD,IAAM,OAAO,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;YAE3C,IAAM,aAAa,GAAG;gBACpB,IAAI,EAAE,OAAO,CAAC,IAAI;gBAClB,OAAO,EAAE,OAAO,CAAC,YAAY;gBAC7B,WAAW,EAAE,OAAO,CAAC,WAAW;gBAChC,OAAO,EAAE,OAAO,CAAC,OAAO;aACzB,CAAC;YAGF,IAAM,WAAW,GAAG,UAAU,CAAC,GAAG,CAAC,UAAA,SAAS;gBAC1C,OAAA,wBAAwB,CACtB,SAAS,EACT,kBAAkB,EAClB,UAAU,EACV,aAAa,CACd;YALD,CAKC,CACF,CAAC;YAEF,IAAM,UAAU,GAAG,WAAW,CAAC,GAAG,CAAC,UAAC,EAAQ;oBAAN,cAAI;gBAAO,OAAA,IAAI;YAAJ,CAAI,CAAC,CAAC;YACvD,IAAM,OAAO,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;YAGvC,IAAI,OAAO,CAAC,MAAM,KAAK,KAAK,EAAE;gBAC5B,OAAO,SAAS,CACd,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAClE,CAAC;aACH;YAED,IAAI;gBACD,OAAe,CAAC,IAAI,GAAG,uBAAuB,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;aACxE;YAAC,OAAO,UAAU,EAAE;gBACnB,OAAO,SAAS,CAAgB,UAAU,CAAC,CAAC;aAC7C;YAED,IAAI,UAAU,CAAC;YACf,IAAI,CAAE,OAAe,CAAC,MAAM,EAAE;gBACtB,IAAA,8BAA+D,EAA7D,2BAAuB,EAAE,kBAAM,CAA+B;gBACtE,UAAU,GAAG,WAAW,CAAC;gBACzB,IAAI,UAAU;oBAAG,OAAe,CAAC,MAAM,GAAG,MAAM,CAAC;aAClD;YAED,OAAO,IAAI,UAAU,CAAgB,UAAA,QAAQ;gBAC3C,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC;qBACxB,IAAI,CAAC,UAAA,QAAQ;oBAEZ,UAAU,CAAC,OAAO,CAAC,UAAA,SAAS,IAAI,OAAA,SAAS,CAAC,UAAU,CAAC,EAAE,QAAQ,UAAA,EAAE,CAAC,EAAlC,CAAkC,CAAC,CAAC;oBACpE,OAAO,QAAQ,CAAC;gBAClB,CAAC,CAAC;qBACD,IAAI,CAAC,yBAAyB,CAAC,UAAU,CAAC,CAAC;qBAC3C,IAAI,CAAC,UAAA,MAAM;oBAEV,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACtB,QAAQ,CAAC,QAAQ,EAAE,CAAC;oBACpB,OAAO,MAAM,CAAC;gBAChB,CAAC,CAAC;qBACD,KAAK,CAAC,UAAA,GAAG;oBAER,IAAI,GAAG,CAAC,IAAI,KAAK,YAAY;wBAAE,OAAO;oBAOtC,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,IAAI,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE;wBA2BtD,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;qBAC3B;oBAED,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACtB,CAAC,CAAC,CAAC;gBAEL,OAAO;oBAGL,IAAI,UAAU;wBAAE,UAAU,CAAC,KAAK,EAAE,CAAC;gBACrC,CAAC,CAAC;YACJ,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;QAEF,QAAQ;YACN,QAAQ;gBACR,CAAC,UAAC,SAAoB;oBACpB,IAAM,OAAO,GAAG,SAAS,CAAC,UAAU,EAAE,CAAC;oBAEvC,IAAM,aAAa,GAAG;wBACpB,IAAI,EAAE,OAAO,CAAC,IAAI;wBAClB,OAAO,EAAE,OAAO,CAAC,YAAY;wBAC7B,WAAW,EAAE,OAAO,CAAC,WAAW;wBAChC,OAAO,EAAE,OAAO,CAAC,OAAO;qBACzB,CAAC;oBAGF,OAAO,SAAS,CAAC,SAAS,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;gBACnE,CAAC,CAAC,CAAC;QAEL,KAAI,CAAC,OAAO,GAAG,IAAI,SAAS,CAAC;YAC3B,aAAa,EAAE,KAAI,CAAC,aAAa;YACjC,QAAQ,EAAE,KAAI,CAAC,QAAQ;YACvB,QAAQ,UAAA;YACR,YAAY,cAAA;SACb,CAAC,CAAC;;IACL,CAAC;IAEM,+BAAO,GAAd,UAAe,SAAoB;QACjC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IACzC,CAAC;IACH,oBAAC;AAAD,CAAC,AA/KD,CAAmC,UAAU,GA+K5C\"}","dtsmap":{"name":"/Users/hwillson/Documents/git/apollo/apollo-link/packages/apollo-link-batch-http/batchHttpLink.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"batchHttpLink.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"src/batchHttpLink.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EACL,UAAU,EACV,SAAS,EACT,WAAW,EACX,UAAU,EAEX,MAAM,aAAa,CAAC;AACrB,OAAO,EAQL,WAAW,EACZ,MAAM,yBAAyB,CAAC;AAGjC,yBAAiB,aAAa,CAAC;IAC7B,UAAiB,OAAQ,SAAQ,WAAW;QAM1C,QAAQ,CAAC,EAAE,MAAM,CAAC;QAOlB,aAAa,CAAC,EAAE,MAAM,CAAC;QAKvB,QAAQ,CAAC,EAAE,CAAC,SAAS,EAAE,SAAS,KAAK,MAAM,CAAC;KAC7C;CACF;AAMD,qBAAa,aAAc,SAAQ,UAAU;IAC3C,OAAO,CAAC,aAAa,CAAS;IAC9B,OAAO,CAAC,QAAQ,CAAS;IACzB,OAAO,CAAC,OAAO,CAAa;gBAEhB,WAAW,GAAE,aAAa,CAAC,OAAY;IAuK5C,OAAO,CAAC,SAAS,EAAE,SAAS,GAAG,UAAU,CAAC,WAAW,CAAC,GAAG,IAAI;CAGrE\"}"},"dts":{"name":"/Users/hwillson/Documents/git/apollo/apollo-link/packages/apollo-link-batch-http/batchHttpLink.d.ts","writeByteOrderMark":false,"text":"import { ApolloLink, Operation, FetchResult, Observable } from 'apollo-link';\r\nimport { HttpOptions } from 'apollo-link-http-common';\r\nexport declare namespace BatchHttpLink {\r\n    interface Options extends HttpOptions {\r\n        batchMax?: number;\r\n        batchInterval?: number;\r\n        batchKey?: (operation: Operation) => string;\r\n    }\r\n}\r\nexport declare class BatchHttpLink extends ApolloLink {\r\n    private batchInterval;\r\n    private batchMax;\r\n    private batcher;\r\n    constructor(fetchParams?: BatchHttpLink.Options);\r\n    request(operation: Operation): Observable<FetchResult> | null;\r\n}\r\n//# sourceMappingURL=batchHttpLink.d.ts.map"}}
