'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator;

function _load_regenerator() {
  return _regenerator = _interopRequireDefault(require('babel-runtime/regenerator'));
}

var _asyncToGenerator2;

function _load_asyncToGenerator() {
  return _asyncToGenerator2 = _interopRequireDefault(require('babel-runtime/helpers/asyncToGenerator'));
}

var validateProject = function () {
  var _ref = (0, (_asyncToGenerator2 || _load_asyncToGenerator()).default)( /*#__PURE__*/(_regenerator || _load_regenerator()).default.mark(function _callee(_ref2) {
    var sdkVersion = _ref2.sdkVersion,
        bundleIdentifier = _ref2.bundleIdentifier;
    return (_regenerator || _load_regenerator()).default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            // 1. expo.ios.bundleIdentifier key must be defined in app.json.
            ensureBundleIdentifierIsDefined(bundleIdentifier);

            // 2. SDK version must be still supported.
            _context.next = 3;
            return (_utils || _load_utils()).checkIfSdkIsSupported(sdkVersion, (_constants || _load_constants()).PLATFORMS.IOS);

          case 3:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  return function validateProject(_x) {
    return _ref.apply(this, arguments);
  };
}();

var _xdl;

function _load_xdl() {
  return _xdl = require('xdl');
}

var _constants;

function _load_constants() {
  return _constants = require('../constants');
}

var _utils;

function _load_utils() {
  return _utils = _interopRequireWildcard(require('../utils'));
}

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ensureBundleIdentifierIsDefined(bundleIdentifier) {
  if (!bundleIdentifier) {
    throw new (_xdl || _load_xdl()).XDLError((_xdl || _load_xdl()).ErrorCode.INVALID_OPTIONS, 'Your project must have a bundleIdentifier set in app.json.\nSee https://docs.expo.io/versions/latest/guides/building-standalone-apps.html');
  }
}

exports.default = validateProject;
module.exports = exports['default'];
//# sourceMappingURL=../../../__sourcemaps__/commands/build/ios/projectValidator.js.map
