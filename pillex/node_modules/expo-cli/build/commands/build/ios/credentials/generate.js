'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.determineMissingCredentials = exports.generate = undefined;

var _keys;

function _load_keys() {
  return _keys = _interopRequireDefault(require('babel-runtime/core-js/object/keys'));
}

var _regenerator;

function _load_regenerator() {
  return _regenerator = _interopRequireDefault(require('babel-runtime/regenerator'));
}

var _extends2;

function _load_extends() {
  return _extends2 = _interopRequireDefault(require('babel-runtime/helpers/extends'));
}

var _getIterator2;

function _load_getIterator() {
  return _getIterator2 = _interopRequireDefault(require('babel-runtime/core-js/get-iterator'));
}

var _asyncToGenerator2;

function _load_asyncToGenerator() {
  return _asyncToGenerator2 = _interopRequireDefault(require('babel-runtime/helpers/asyncToGenerator'));
}

var generate = function () {
  var _ref = (0, (_asyncToGenerator2 || _load_asyncToGenerator()).default)( /*#__PURE__*/(_regenerator || _load_regenerator()).default.mark(function _callee(appleCtx, credentialsToGenerate, metadata) {
    var newCredentials, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, id, name, spinner, generated;

    return (_regenerator || _load_regenerator()).default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            if (!(!credentialsToGenerate || credentialsToGenerate.length === 0)) {
              _context.next = 2;
              break;
            }

            return _context.abrupt('return', {});

          case 2:

            (0, (_log || _load_log()).default)('We\'re going to generate:');
            credentialsToGenerate.forEach(function (type) {
              (0, (_log || _load_log()).default)('- ' + (_constants || _load_constants()).CREDENTIALS[type].name);
            });

            newCredentials = {};
            _iteratorNormalCompletion = true;
            _didIteratorError = false;
            _iteratorError = undefined;
            _context.prev = 8;
            _iterator = (0, (_getIterator2 || _load_getIterator()).default)(credentialsToGenerate);

          case 10:
            if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
              _context.next = 29;
              break;
            }

            id = _step.value;
            name = (_constants || _load_constants()).CREDENTIALS[id].name;
            spinner = (0, (_ora || _load_ora()).default)('Generating ' + name + '...').start();
            _context.prev = 14;
            _context.next = 17;
            return _create(appleCtx, id, metadata);

          case 17:
            generated = _context.sent;

            spinner.succeed('Generated ' + name);
            newCredentials = (0, (_extends2 || _load_extends()).default)({}, newCredentials, generated);
            _context.next = 26;
            break;

          case 22:
            _context.prev = 22;
            _context.t0 = _context['catch'](14);

            spinner.fail('Failed to generate ' + name);
            throw _context.t0;

          case 26:
            _iteratorNormalCompletion = true;
            _context.next = 10;
            break;

          case 29:
            _context.next = 35;
            break;

          case 31:
            _context.prev = 31;
            _context.t1 = _context['catch'](8);
            _didIteratorError = true;
            _iteratorError = _context.t1;

          case 35:
            _context.prev = 35;
            _context.prev = 36;

            if (!_iteratorNormalCompletion && _iterator.return) {
              _iterator.return();
            }

          case 38:
            _context.prev = 38;

            if (!_didIteratorError) {
              _context.next = 41;
              break;
            }

            throw _iteratorError;

          case 41:
            return _context.finish(38);

          case 42:
            return _context.finish(35);

          case 43:
            return _context.abrupt('return', newCredentials);

          case 44:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this, [[8, 31, 35, 43], [14, 22], [36,, 38, 42]]);
  }));

  return function generate(_x, _x2, _x3) {
    return _ref.apply(this, arguments);
  };
}();

var _create = function () {
  var _ref2 = (0, (_asyncToGenerator2 || _load_asyncToGenerator()).default)( /*#__PURE__*/(_regenerator || _load_regenerator()).default.mark(function _callee2(appleCtx, type, metadata) {
    var manager;
    return (_regenerator || _load_regenerator()).default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            manager = (_appleApi || _load_appleApi()).createManagers(appleCtx)[type];
            _context2.next = 3;
            return manager.create(metadata);

          case 3:
            return _context2.abrupt('return', _context2.sent);

          case 4:
          case 'end':
            return _context2.stop();
        }
      }
    }, _callee2, this);
  }));

  return function _create(_x4, _x5, _x6) {
    return _ref2.apply(this, arguments);
  };
}();

var _ora;

function _load_ora() {
  return _ora = _interopRequireDefault(require('ora'));
}

var _intersection;

function _load_intersection() {
  return _intersection = _interopRequireDefault(require('lodash/intersection'));
}

var _constants;

function _load_constants() {
  return _constants = _interopRequireWildcard(require('./constants'));
}

var _log;

function _load_log() {
  return _log = _interopRequireDefault(require('../../../../log'));
}

var _appleApi;

function _load_appleApi() {
  return _appleApi = _interopRequireWildcard(require('../appleApi'));
}

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function determineMissingCredentials() {
  var existingCredentials = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var existingCredentialsKeys = (0, (_keys || _load_keys()).default)(existingCredentials);
  var missing = (_constants || _load_constants()).REQUIRED_CREDENTIALS.reduce(function (acc, ruleOrCondition) {
    var id = _applyRuleOrCondition(existingCredentialsKeys, ruleOrCondition);
    if (id) {
      acc.push(id);
    }
    return acc;
  }, []);
  return missing.length === 0 ? null : missing;
}

function _applyRuleOrCondition(keys, ruleOrCondition) {
  if ('or' in ruleOrCondition) {
    return _applyOrCondition(keys, ruleOrCondition.or);
  } else {
    return _applyRule(keys, ruleOrCondition);
  }
}

function _applyOrCondition(keys, condition) {
  var applyingRules = condition.filter(function (rule) {
    return _doCredentialsExist(keys, rule);
  });
  if (applyingRules.length === 0) {
    var notDeprecatedRule = condition.find(function (rule) {
      return !rule.deprecated;
    });
    return notDeprecatedRule.id;
  } else if (applyingRules.length === 1) {
    var _applyingRules$ = applyingRules[0],
        deprecated = _applyingRules$.deprecated,
        name = _applyingRules$.name;

    if (deprecated) {
      (_log || _load_log()).default.warn('You\'re using deprecated ' + name + '. Read our docs to learn how to use more modern solution.');
    }
    return null;
  }
}
var _applyRule = function _applyRule(keys, rule) {
  return !_doCredentialsExist(keys, rule) ? rule.id : null;
};

function _doCredentialsExist(keys, rule) {
  var common = (0, (_intersection || _load_intersection()).default)(keys, rule.required);
  return rule.required.length === common.length;
}

exports.generate = generate;
exports.determineMissingCredentials = determineMissingCredentials;
//# sourceMappingURL=../../../../__sourcemaps__/commands/build/ios/credentials/generate.js.map
