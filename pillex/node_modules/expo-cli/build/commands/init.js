'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _keys;

function _load_keys() {
  return _keys = _interopRequireDefault(require('babel-runtime/core-js/object/keys'));
}

var _getIterator2;

function _load_getIterator() {
  return _getIterator2 = _interopRequireDefault(require('babel-runtime/core-js/get-iterator'));
}

var _stringify;

function _load_stringify() {
  return _stringify = _interopRequireDefault(require('babel-runtime/core-js/json/stringify'));
}

var _regenerator;

function _load_regenerator() {
  return _regenerator = _interopRequireDefault(require('babel-runtime/regenerator'));
}

var _asyncToGenerator2;

function _load_asyncToGenerator() {
  return _asyncToGenerator2 = _interopRequireDefault(require('babel-runtime/helpers/asyncToGenerator'));
}

var action = function () {
  var _ref = (0, (_asyncToGenerator2 || _load_asyncToGenerator()).default)( /*#__PURE__*/(_regenerator || _load_regenerator()).default.mark(function _callee(projectDir, options) {
    var parentDir, dirName, root, validationResult, templateSpec, _ref2, workflow, initialConfig, packageManager, projectPath, cdPath;

    return (_regenerator || _load_regenerator()).default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            parentDir = void 0;
            dirName = void 0;

            if (!projectDir) {
              _context.next = 11;
              break;
            }

            root = _path.default.resolve(projectDir);

            parentDir = _path.default.dirname(root);
            dirName = _path.default.basename(root);
            validationResult = validateName(parentDir, dirName);

            if (!(validationResult !== true)) {
              _context.next = 9;
              break;
            }

            throw new (_CommandError || _load_CommandError()).default('INVALID_PROJECT_DIR', validationResult);

          case 9:
            _context.next = 12;
            break;

          case 11:
            parentDir = process.cwd();

          case 12:
            templateSpec = void 0;

            if (!options.template) {
              _context.next = 18;
              break;
            }

            templateSpec = (0, (_npmPackageArg || _load_npmPackageArg()).default)(options.template);

            // For backwards compatibility, 'blank' and 'tabs' are aliases for
            // 'expo-template-blank' and 'expo-template-tabs', respectively.
            if ((templateSpec.name === 'blank' || templateSpec.name === 'tabs') && templateSpec.registry) {
              templateSpec.name = templateSpec.escapedName = 'expo-template-' + templateSpec.name;
            }
            _context.next = 22;
            break;

          case 18:
            _context.next = 20;
            return (0, (_prompt || _load_prompt()).default)({
              type: 'list',
              name: 'templateSpec',
              message: 'Choose a template:',
              choices: FEATURED_TEMPLATES.map(function (template) {
                return {
                  value: template.name,
                  name: (_chalk || _load_chalk()).default.bold(template.shortName) + '\n' + (0, (_wordwrap || _load_wordwrap()).default)(2, process.stdout.columns || 80)(template.description),
                  short: template.name
                };
              })
            });

          case 20:
            _ref2 = _context.sent;
            templateSpec = _ref2.templateSpec;

          case 22:
            workflow = void 0;

            if (!options.workflow) {
              _context.next = 31;
              break;
            }

            if (!(options.workflow === 'managed' || options.workflow === 'advanced')) {
              _context.next = 28;
              break;
            }

            workflow = options.workflow;
            _context.next = 29;
            break;

          case 28:
            throw new (_CommandError || _load_CommandError()).default('BAD_ARGS', 'Invalid --workflow: \'' + options.workflow + '\'. Valid choices are: managed, advanced');

          case 29:
            _context.next = 34;
            break;

          case 31:
            _context.next = 33;
            return promptForWorkflowAsync();

          case 33:
            workflow = _context.sent;

          case 34:
            _context.next = 36;
            return promptForInitialConfig(parentDir, dirName, workflow);

          case 36:
            initialConfig = _context.sent;
            packageManager = void 0;

            if (!options.yarn) {
              _context.next = 42;
              break;
            }

            packageManager = 'yarn';
            _context.next = 54;
            break;

          case 42:
            if (!options.npm) {
              _context.next = 46;
              break;
            }

            packageManager = 'npm';
            _context.next = 54;
            break;

          case 46:
            _context.next = 48;
            return shouldUseYarnAsync();

          case 48:
            if (!_context.sent) {
              _context.next = 52;
              break;
            }

            _context.t0 = 'yarn';
            _context.next = 53;
            break;

          case 52:
            _context.t0 = 'npm';

          case 53:
            packageManager = _context.t0;

          case 54:
            _context.next = 56;
            return downloadAndExtractTemplate(templateSpec, parentDir, dirName, packageManager, workflow, initialConfig);

          case 56:
            projectPath = _context.sent;
            cdPath = _path.default.relative(process.cwd(), projectPath);

            if (cdPath.length > projectPath.length) {
              cdPath = projectPath;
            }
            (_log || _load_log()).default.nested('\nYour project is ready at ' + projectPath);
            (_log || _load_log()).default.nested('To get started, you can type:\n');
            if (cdPath) {
              // empty string if project was created in current directory
              (_log || _load_log()).default.nested('  cd ' + cdPath);
            }
            (_log || _load_log()).default.nested('  ' + packageManager + ' start\n');

          case 63:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  return function action(_x, _x2) {
    return _ref.apply(this, arguments);
  };
}();

var downloadAndExtractTemplate = function () {
  var _ref3 = (0, (_asyncToGenerator2 || _load_asyncToGenerator()).default)( /*#__PURE__*/(_regenerator || _load_regenerator()).default.mark(function _callee2(templateSpec, parentDir, dirName, packageManager, workflow, initialConfig) {
    return (_regenerator || _load_regenerator()).default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            return _context2.abrupt('return', (_xdl || _load_xdl()).Exp.extractTemplateApp(templateSpec, _path.default.join(parentDir, dirName || initialConfig.slug), packageManager, workflow, initialConfig));

          case 1:
          case 'end':
            return _context2.stop();
        }
      }
    }, _callee2, this);
  }));

  return function downloadAndExtractTemplate(_x3, _x4, _x5, _x6, _x7, _x8) {
    return _ref3.apply(this, arguments);
  };
}();

var shouldUseYarnAsync = function () {
  var _ref4 = (0, (_asyncToGenerator2 || _load_asyncToGenerator()).default)( /*#__PURE__*/(_regenerator || _load_regenerator()).default.mark(function _callee3() {
    var version, answer;
    return (_regenerator || _load_regenerator()).default.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            _context3.prev = 0;
            _context3.next = 3;
            return (0, (_spawnAsync || _load_spawnAsync()).default)('yarnpkg', ['--version']);

          case 3:
            version = _context3.sent.stdout.trim();

            if ((_semver || _load_semver()).default.valid(version)) {
              _context3.next = 6;
              break;
            }

            return _context3.abrupt('return', false);

          case 6:
            _context3.next = 8;
            return (0, (_prompt || _load_prompt()).default)({
              type: 'confirm',
              name: 'useYarn',
              message: 'Yarn v' + version + ' found. Use Yarn to install dependencies?'
            });

          case 8:
            answer = _context3.sent;
            return _context3.abrupt('return', answer.useYarn);

          case 12:
            _context3.prev = 12;
            _context3.t0 = _context3['catch'](0);
            return _context3.abrupt('return', false);

          case 15:
          case 'end':
            return _context3.stop();
        }
      }
    }, _callee3, this, [[0, 12]]);
  }));

  return function shouldUseYarnAsync() {
    return _ref4.apply(this, arguments);
  };
}();

var promptForWorkflowAsync = function () {
  var _ref5 = (0, (_asyncToGenerator2 || _load_asyncToGenerator()).default)( /*#__PURE__*/(_regenerator || _load_regenerator()).default.mark(function _callee4() {
    var answer;
    return (_regenerator || _load_regenerator()).default.wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            _context4.next = 2;
            return (0, (_prompt || _load_prompt()).default)({
              type: 'list',
              name: 'workflow',
              message: 'Choose which workflow to use:',
              choices: [{
                value: 'managed',
                name: (_chalk || _load_chalk()).default.bold('managed') + ' (default)' + '\n' + (0, (_wordwrap || _load_wordwrap()).default)(2, process.stdout.columns || 80)('Build your app with JavaScript with Expo APIs.'),
                short: 'managed'
              }, {
                value: 'advanced',
                name: (_chalk || _load_chalk()).default.bold('advanced') + ' (experimental 🚧)' + '\n' + (0, (_wordwrap || _load_wordwrap()).default)(2, process.stdout.columns || 80)('Build your app with JavaScript with Expo APIs and custom native modules.'),
                short: 'advanced'
              }]
            });

          case 2:
            answer = _context4.sent;
            return _context4.abrupt('return', answer.workflow);

          case 4:
          case 'end':
            return _context4.stop();
        }
      }
    }, _callee4, this);
  }));

  return function promptForWorkflowAsync() {
    return _ref5.apply(this, arguments);
  };
}();

var promptForInitialConfig = function () {
  var _ref6 = (0, (_asyncToGenerator2 || _load_asyncToGenerator()).default)( /*#__PURE__*/(_regenerator || _load_regenerator()).default.mark(function _callee5(parentDir, dirName, workflow) {
    var template, _ref7, values, config, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, key;

    return (_regenerator || _load_regenerator()).default.wrap(function _callee5$(_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            template = {
              expo: {
                name: '{{name}}',
                slug: '{{slug}}'
              }
            };


            if (workflow === 'advanced') {
              template.android = {
                package: '{{android.package}}'
              };
              template.ios = {
                bundleIdentifier: '{{ios.bundleIdentifier}}'
              };
            }

            _context5.next = 4;
            return new (_enquirer || _load_enquirer()).Snippet({
              name: 'expo',
              message: 'Please enter a few initial configuration values.\n  Read more: https://docs.expo.io/versions/latest/workflow/configuration',
              required: true,
              fields: [{
                name: 'name',
                message: 'The name of your app visible on the home screen',
                filter: function filter(name) {
                  return name.trim();
                },
                required: true
              }, {
                name: 'slug',
                message: 'A URL friendly name for your app',
                initial: dirName,
                filter: function filter(name) {
                  return name.trim();
                },
                validate: function validate(name) {
                  return validateName(parentDir, name);
                },
                required: true
              }, {
                name: 'android.package',
                message: 'The package name for your Android app',
                validate: function validate(value) {
                  return (/^[a-zA-Z][a-zA-Z0-9\_]*(\.[a-zA-Z][a-zA-Z0-9\_]*)+$/.test(value) ? true : "Only alphanumeric characters, '.' and '_' are allowed, and each '.' must be followed by a letter."
                  );
                },
                required: true
              }, {
                name: 'ios.bundleIdentifier',
                message: 'The bundle identifier for your iOS app',
                validate: function validate(value) {
                  return (/^[a-zA-Z][a-zA-Z0-9\-\.]+$/.test(value) ? true : "Must start with a letter and only alphanumeric characters, '.' and '-' are allowed."
                  );
                },
                required: true
              }],
              initial: 'slug',
              template: (0, (_stringify || _load_stringify()).default)(template, null, 2)
            }).run();

          case 4:
            _ref7 = _context5.sent;
            values = _ref7.values;
            config = {};
            _iteratorNormalCompletion = true;
            _didIteratorError = false;
            _iteratorError = undefined;
            _context5.prev = 10;

            for (_iterator = (0, (_getIterator2 || _load_getIterator()).default)((0, (_keys || _load_keys()).default)(values)); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              key = _step.value;

              (0, (_set || _load_set()).default)(config, key, values[key]);
            }
            _context5.next = 18;
            break;

          case 14:
            _context5.prev = 14;
            _context5.t0 = _context5['catch'](10);
            _didIteratorError = true;
            _iteratorError = _context5.t0;

          case 18:
            _context5.prev = 18;
            _context5.prev = 19;

            if (!_iteratorNormalCompletion && _iterator.return) {
              _iterator.return();
            }

          case 21:
            _context5.prev = 21;

            if (!_didIteratorError) {
              _context5.next = 24;
              break;
            }

            throw _iteratorError;

          case 24:
            return _context5.finish(21);

          case 25:
            return _context5.finish(18);

          case 26:
            return _context5.abrupt('return', config);

          case 27:
          case 'end':
            return _context5.stop();
        }
      }
    }, _callee5, this, [[10, 14, 18, 26], [19,, 21, 25]]);
  }));

  return function promptForInitialConfig(_x9, _x10, _x11) {
    return _ref6.apply(this, arguments);
  };
}();

var _chalk;

function _load_chalk() {
  return _chalk = _interopRequireDefault(require('chalk'));
}

var _fs = _interopRequireDefault(require('fs'));

var _xdl;

function _load_xdl() {
  return _xdl = require('xdl');
}

var _enquirer;

function _load_enquirer() {
  return _enquirer = require('enquirer');
}

var _semver;

function _load_semver() {
  return _semver = _interopRequireDefault(require('semver'));
}

var _set;

function _load_set() {
  return _set = _interopRequireDefault(require('lodash/set'));
}

var _spawnAsync;

function _load_spawnAsync() {
  return _spawnAsync = _interopRequireDefault(require('@expo/spawn-async'));
}

var _npmPackageArg;

function _load_npmPackageArg() {
  return _npmPackageArg = _interopRequireDefault(require('npm-package-arg'));
}

var _wordwrap;

function _load_wordwrap() {
  return _wordwrap = _interopRequireDefault(require('wordwrap'));
}

var _prompt;

function _load_prompt() {
  return _prompt = _interopRequireDefault(require('../prompt'));
}

var _log;

function _load_log() {
  return _log = _interopRequireDefault(require('../log'));
}

var _CommandError;

function _load_CommandError() {
  return _CommandError = _interopRequireDefault(require('../CommandError'));
}

var _path = _interopRequireDefault(require('path'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var FEATURED_TEMPLATES = [{
  shortName: 'blank',
  name: 'expo-template-blank',
  description: 'minimum dependencies to run and an empty root component'
}, {
  shortName: 'tabs',
  name: 'expo-template-tabs',
  description: 'several example screens and tabs using react-navigation'
}];

var _downloadIsSlowPrompt = false;

function validateName(parentDir, name) {
  if (!/^[a-z0-9@.\-_]+$/i.test(name)) {
    return 'The project name can only contain URL-friendly characters.';
  }
  if (typeof name !== 'string' || name === '') {
    return 'The project name can not be empty.';
  }
  var dir = _path.default.join(parentDir, name);
  if (!isNonExistentOrEmptyDir(dir)) {
    return 'The path "' + dir + '" already exists. Please choose a different parent directory or project name.';
  }
  return true;
}

function isNonExistentOrEmptyDir(dir) {
  try {
    return _fs.default.statSync(dir).isDirectory() && _fs.default.readdirSync(dir).length === 0;
  } catch (error) {
    if (error.code === 'ENOENT') {
      return true;
    }
    throw error;
  }
}

exports.default = function (program) {
  program.command('init [project-dir]').alias('i').description('Initializes a directory with an example project. Run it without any options and you will be prompted for the name and type.').option('-t, --template [name]', 'Specify which template to use. Valid options are "blank", "tabs" or any npm package that includes an Expo project template.').option('--npm', 'Use npm to install dependencies. (default when Yarn is not installed)').option('--yarn', 'Use Yarn to install dependencies. (default when Yarn is installed)').option('--workflow [name]', 'The workflow to use.').asyncAction(action);
};

module.exports = exports['default'];
//# sourceMappingURL=../__sourcemaps__/commands/init.js.map
