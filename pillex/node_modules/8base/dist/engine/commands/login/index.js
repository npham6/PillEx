"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const translations_1 = require("../../../common/translations");
const logout_1 = require("../logout");
require("isomorphic-fetch");
const config_1 = require("../../../config");
const passwordLogin_1 = require("./passwordLogin");
const webLogin_1 = require("./webLogin");
exports.default = {
    name: "login",
    handler: (params, context) => __awaiter(this, void 0, void 0, function* () {
        yield logout_1.default.handler(params, context);
        const result = params.e || params.p ? yield passwordLogin_1.passwordLogin(params, context) : yield webLogin_1.webLogin(params, context);
        context.setSessionInfo(result);
        context.spinner.stop();
        yield context.chooseWorkspace();
    }),
    describe: translations_1.translations.i18n.t("login_describe"),
    builder: (args) => {
        return args
            .usage(translations_1.translations.i18n.t("login_usage"))
            .option("e", {
            alias: 'email',
            describe: "user email",
            type: "string"
        })
            .option("p", {
            alias: 'password',
            describe: "user password",
            type: "string"
        })
            .option("w", {
            type: "string",
            default: config_1.StaticConfig.webClientAddress,
            hidden: true
        });
    }
};
//# sourceMappingURL=index.js.map