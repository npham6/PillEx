"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const GraphqlActions_1 = require("../../../consts/GraphqlActions");
const interactive_1 = require("../../../common/interactive");
const promptEmail = () => __awaiter(this, void 0, void 0, function* () {
    return (yield interactive_1.Interactive.ask({ type: "text", name: "email", message: "Email:" })).email;
});
const promptPassword = () => __awaiter(this, void 0, void 0, function* () {
    return (yield interactive_1.Interactive.ask({
        name: "password",
        message: "Password:",
        type: "password"
    })).password;
});
exports.passwordLogin = (params, context) => __awaiter(this, void 0, void 0, function* () {
    context.logger.info(context.i18n.t("login_password_warning"));
    const data = {
        email: params.e ? params.e : yield promptEmail(),
        password: params.p ? params.p : yield promptPassword()
    };
    context.spinner.start(context.i18n.t("login_in_progress"));
    const result = yield context.request(GraphqlActions_1.GraphqlActions.login, { data: { email: data.email, password: data.password } }, false);
    return {
        idToken: result.userLogin.auth.idToken,
        refreshToken: result.userLogin.auth.refreshToken,
        workspaces: result.userLogin.workspaces.map((w) => { return { name: w.name, id: w.workspace }; })
    };
});
//# sourceMappingURL=passwordLogin.js.map